# -*- MakeFile -*-

TARGET := stm32u585xx_bring-up
MARCH  := cortex-m33
PROJECT_PATH := $(APPS_PATH)/stm32u5/u585xx_bring-up

INCLUDES := -I$(PROJECT_PATH)/system/include \
			-I$(PROJECT_PATH)/bsp/include \
			-I$(CORE_PATH)/CMSIS

CFLAGS   := -c \
			-mcpu=$(MARCH) \
			-mthumb \
			-O0 \
			-g \
			-Wall \
			-Wl,--gc-sections

SFLAGS   := -c \
			-mcpu=$(MARCH) \
			-mthumb \
			-O0 \
			-g \
			-Wall \
			-Wl,--gc-sections

LDSCRIPT := STM32U585xx_FLASH.ld
LFLAGS   := -mcpu=$(MARCH) \
			-mthumb \
			-O0 \
			-g \
			--specs=nano.specs \
			-lgcc \
			-Wl,--print-memory-usage \
			-T$(LINK_PATH)/stm32u5/$(LDSCRIPT)

SFILES   := system/startup_stm32u585xx.s

SYSTEM_CFILES := system/handlers.c \
				system/syscalls.c \
				system/system_stm32u5xx.c \
				system/delay.c

BSP_CFILES := bsp/led.c \
			  bsp/bsp_init.c \
			  bsp/periphs.c

CFILES := main.c

CFILES += ${SYSTEM_CFILES} ${BSP_CFILES}

LIBS += $(OUT_LIB_PATH)/libhal.a \
		$(OUT_LIB_PATH)/liblog.a \
		$(OUT_LIB_PATH)/libeeprom.a \
		$(OUT_LIB_PATH)/libmem_part.a


.PHONY: all
all : $(TARGET).hex


# HAL Library ------------------------
LIBHAL_CFILES := hal/hal_gpio.c \
				hal/hal_i2c.c

SDK_CFILES := hal/sdk/sdk_gpio.c \
            hal/sdk/sdk_i2c.c

INCLUDES += -I$(PROJECT_PATH)/hal/include \
			-I$(PROJECT_PATH)/hal/sdk/include

LIBHAL_OBJS := $(patsubst %.c, $(OUT_OBJ_PATH)/%.o, $(LIBHAL_CFILES))
SDK_OBJS := $(patsubst %.c, $(OUT_OBJ_PATH)/%.o, $(SDK_CFILES))

$(OUT_LIB_PATH)/libhal.a: $(LIBHAL_OBJS) $(SDK_OBJS)
	@echo "[Archiving:" $(notdir $@)"]"
	@mkdir -p $(dir $@)
	@$(AR) rcu $@ $^

# ------------------------------------

# Log Library ------------------------
LIBLOG_CFILES     := logger/tiny_printf.c
INCLUDES          += -I$(PROJECT_PATH)/logger/include

LIBLOG_OBJS := $(patsubst %.c, $(OUT_OBJ_PATH)/%.o, $(LIBLOG_CFILES))

$(OUT_LIB_PATH)/liblog.a: $(LIBLOG_OBJS)
	@echo "[Archiving:" $(notdir $@)"]"
	@mkdir -p $(dir $@)
	@$(AR) rcu $@ $^

# ------------------------------------

# EEPROM Library ---------------------
LIBEEPROM_CFILES     := EEPROM/eeprom.c
INCLUDES             += -I$(PROJECT_PATH)/EEPROM/include

LIBEEPROM_OBJS := $(patsubst %.c, $(OUT_OBJ_PATH)/%.o, $(LIBEEPROM_CFILES))

$(OUT_LIB_PATH)/libeeprom.a: $(LIBEEPROM_OBJS)
	@echo "[Archiving:" $(notdir $@)"]"
	@mkdir -p $(dir $@)
	@$(AR) rcu $@ $^

# ------------------------------------

# MEM PART Library ---------------------
LIBMEMPART_CFILES     := mem_part/mem_part.c
INCLUDES              += -I$(PROJECT_PATH)/mem_part/include

LIBMEMPART_OBJS := $(patsubst %.c, $(OUT_OBJ_PATH)/%.o, $(LIBMEMPART_CFILES))

$(OUT_LIB_PATH)/libmem_part.a: $(LIBMEMPART_OBJS)
	@echo "[Archiving:" $(notdir $@)"]"
	@mkdir -p $(dir $@)
	@$(AR) rcu $@ $^

# ------------------------------------

include $(PROJECT_PATH)/Makefile.cfg

OBJS := $(patsubst %.c, $(OUT_OBJ_PATH)/%.o, $(CFILES))
OBJS += $(patsubst %.s, $(OUT_OBJ_PATH)/%.o, $(SFILES))

$(TARGET).elf: $(OBJS) $(LIBS)
	@echo "[Linking:" $(notdir $@)"]"
	@$(CC) $^ $(LFLAGS) $(LIBS) -o $(OUT_PATH)/$@

$(TARGET).hex: $(TARGET).elf
	@echo "[Generating hex:" $(notdir $@)"]"
	@$(OC) -O ihex $(OUT_PATH)/$(TARGET).elf $(OUT_PATH)/$(TARGET).hex
	@$(OD) -D $(OUT_PATH)/$(TARGET).elf > $(OUT_PATH)/obj-dump-$(TARGET).lst
	@$(OD) -t $(OUT_PATH)/$(TARGET).elf > $(OUT_PATH)/obj-dump-$(TARGET).map
	@$(OD) -h $(OUT_PATH)/$(TARGET).elf > $(OUT_PATH)/obj-dump-sections-$(TARGET).map

$(OUT_OBJ_PATH)/%.o: $(PROJECT_PATH)/%.c
	@echo "[Compiling:" $(notdir $@)"]"
	@mkdir -p $(dir $@)
	@$(CC) $(CFLAGS) $(INCLUDES) $< -o $@

$(OUT_OBJ_PATH)/%.o: $(PROJECT_PATH)/%.s
	@echo "[Syntezing:" $(notdir $@)"]"
	@mkdir -p $(dir $@)
	@$(CC) -x assembler-with-cpp $(INCLUDES) $(SFLAGS) $< -o $@

